# Generated by Django 4.0.4 on 2023-03-06 12:22

import django.core.validators
from django.core.management import call_command
from django.db import migrations, models
import django.db.models.deletion
import timescale.fields


def load_fixtures(apps, schema_editor):
    call_command('loaddata', 'dummy-entries.json', app_label='abd_database')

class Migration(migrations.Migration):

    dependencies = [
        ('abd_database', '0004_remove_uploadbatch_is_deleted_hdf5file_error_details_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='UploadFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='uploadfiles')),
                ('file_name', models.CharField(max_length=256)),
                ('kb', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('INIT', 'Initial'), ('EXTRACT', 'Extracting'), ('CLEAN', 'Cleaning'), ('PREPARED', 'Prepared'), ('SAVE', 'Saving'), ('SUCCESS', 'Successful'), ('ERROR', 'Error'), ('UNHANDLED', 'Unhandled')], default='INIT', max_length=24)),
                ('error_details', models.TextField(blank=True, null=True)),
                ('time', timescale.fields.TimescaleDateTimeField(interval='1 day')),
                ('is_deleted', models.BooleanField(default=False)),
                ('forget', models.BooleanField(default=False)),
                ('checksum', models.CharField(editable=False, max_length=32, validators=[django.core.validators.MinLengthValidator(32, 'Checksum has to be exact 32 long')])),
            ],
        ),
        migrations.RemoveField(
            model_name='battery',
            name='file',
        ),
        migrations.RemoveField(
            model_name='battery',
            name='name',
        ),
        migrations.RemoveField(
            model_name='battery',
            name='name_isSet',
        ),
        migrations.AddField(
            model_name='cyclingtest',
            name='cycle_offset',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='eistest',
            name='cycle_offset',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='uploadbatch',
            name='dataset',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.RESTRICT, to='abd_database.dataset'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='uploadbatch',
            name='extractor_type',
            field=models.CharField(default='Unknown', max_length=32),
        ),
        migrations.DeleteModel(
            name='Hdf5File',
        ),
        migrations.AddField(
            model_name='uploadfile',
            name='batch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='abd_database.uploadbatch'),
        ),
        migrations.AddField(
            model_name='uploadfile',
            name='battery',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='abd_database.battery'),
        ),
        migrations.AddField(
            model_name='celltest',
            name='file',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.RESTRICT, to='abd_database.uploadfile'),
            preserve_default=False,
        ),
        migrations.AddConstraint(
            model_name='uploadfile',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('status__exact', 'ERROR'), ('error_details__isnull', False)), models.Q(models.Q(('status__exact', 'ERROR'), _negated=True), ('error_details__isnull', True)), _connector='OR'), name='details_only_with_error'),
        ),
        migrations.AddConstraint(
            model_name='uploadfile',
            constraint=models.CheckConstraint(check=models.Q(('forget', False), models.Q(('forget', True), models.Q(('status__exact', 'SUCCESS'), _negated=True)), _connector='OR'), name='can_not_forget_if_successful'),
        ),
        # TODO: add reverse_sql
        migrations.RunSQL('''
        BEGIN;
        INSERT INTO public.abd_management_user(
	        password, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined, company_id)
	        VALUES ('', False, 'dummy-user', '', '', '', False, False, CURRENT_TIMESTAMP AT TIME ZONE 'UTC', 1);
        COMMIT;
        '''),
        migrations.RunSQL('''
        BEGIN;
        INSERT INTO public.abd_database_dataset(
	        name, organisation, owner_id)
	        VALUES ('dummy-dataset', 'dummy-organisation', 1);
        COMMIT;
        '''),
        migrations.RunSQL('''
        BEGIN;
        INSERT INTO public.abd_database_uploadbatch(
	        user_id, dataset_id, extractor_type)
	        VALUES (1, 1, 'UNKNOWN');
        COMMIT;
        '''),
        migrations.RunSQL('''
        BEGIN;
        INSERT INTO public.abd_database_uploadfile(
        	file_name, kb, status, "time", batch_id, file, is_deleted, forget, checksum)
	        VALUES ('dummy-file', 0, 'Initial', '1970-01-01 09:00:00', 1, '', True, True, '');
        COMMIT;
        '''),
    ]
